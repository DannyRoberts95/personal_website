{"ast":null,"code":"import _classCallCheck from \"/Users/Dan/Documents/Personal Work/personal_website/source_code/website_build_mk2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Dan/Documents/Personal Work/personal_website/source_code/website_build_mk2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Dan/Documents/Personal Work/personal_website/source_code/website_build_mk2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Dan/Documents/Personal Work/personal_website/source_code/website_build_mk2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Dan/Documents/Personal Work/personal_website/source_code/website_build_mk2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Dan/Documents/Personal Work/personal_website/source_code/website_build_mk2/src/components/ProjectPage.js\";\nimport React, { Component } from \"react\"; // import ReactDOM from \"react-dom\";\n// import { Player } from \"video-react\";\n// import \"../css/video-react.css\";\n\nimport axios from \"axios\";\n\nvar ProjectPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProjectPage, _Component);\n\n  function ProjectPage(props) {\n    var _this;\n\n    _classCallCheck(this, ProjectPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProjectPage).call(this, props));\n    _this.state = {\n      projectName: \"\",\n      projectFields: [],\n      created: \"\",\n      projectModules: []\n    };\n    return _this;\n  }\n\n  _createClass(ProjectPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      //make an axios request for the project by appending the ID passed from the projectModule component to the URL\n      axios.get(\"https://cors-anywhere.herokuapp.com/http://www.behance.net/v2/projects/\".concat(this.props.match.params.id, \"?api_key=EnQn6zgYBKyZh2keUdkI1FdONQn7rava\")).then(function (response) {\n        _this2.setState({\n          projectName: response.data.project.name,\n          projectFields: response.data.project.fields,\n          created: response.data.project.created_on,\n          projectModules: response.data.project.modules\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //map the project fields into display tags\n      var fields = this.state.projectFields.map(function (item) {\n        return React.createElement(\"span\", {\n          key: item.toString(),\n          className: \"tag is-dark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, item.toString());\n      }); //convert the date from a unix time code to a string and only display\n      //the relevant characters\n\n      var created = new Date(this.state.created * 1000).toLocaleString().substring(0, 10); // map over the modules recieved from the response and build the chunks to render\n\n      var projectModules = this.state.projectModules.map(function (item) {\n        //if there is any text in the module...\n        if (item.type === \"text\") {\n          return React.createElement(\"div\", {\n            key: item.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }, item.text_plain), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }, fields), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, created)));\n        }\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.state.projectName), projectModules, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return ProjectPage;\n}(Component);\n\nexport default ProjectPage;","map":{"version":3,"sources":["/Users/Dan/Documents/Personal Work/personal_website/source_code/website_build_mk2/src/components/ProjectPage.js"],"names":["React","Component","axios","ProjectPage","props","state","projectName","projectFields","created","projectModules","get","match","params","id","then","response","setState","data","project","name","fields","created_on","modules","catch","error","console","log","map","item","toString","Date","toLocaleString","substring","type","text_plain"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// import ReactDOM from \"react-dom\";\n// import { Player } from \"video-react\";\n// import \"../css/video-react.css\";\nimport axios from \"axios\";\n\nclass ProjectPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectName: ``,\n      projectFields: [],\n      created: ``,\n      projectModules: []\n    };\n  }\n\n  componentDidMount() {\n    //make an axios request for the project by appending the ID passed from the projectModule component to the URL\n    axios\n      .get(\n        `https://cors-anywhere.herokuapp.com/http://www.behance.net/v2/projects/${\n          this.props.match.params.id\n        }?api_key=EnQn6zgYBKyZh2keUdkI1FdONQn7rava`\n      )\n      .then(response => {\n        this.setState({\n          projectName: response.data.project.name,\n          projectFields: response.data.project.fields,\n          created: response.data.project.created_on,\n          projectModules: response.data.project.modules\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    //map the project fields into display tags\n    const fields = this.state.projectFields.map(item => (\n      <span key={item.toString()} className=\"tag is-dark\">\n        {item.toString()}\n      </span>\n    ));\n\n    //convert the date from a unix time code to a string and only display\n    //the relevant characters\n    let created = new Date(this.state.created * 1000)\n      .toLocaleString()\n      .substring(0, 10);\n\n    // map over the modules recieved from the response and build the chunks to render\n    const projectModules = this.state.projectModules.map(item => {\n      //if there is any text in the module...\n      if (item.type === \"text\") {\n        return (\n          <div key={item.id}>\n            <div>\n              <br />\n              <p>{item.text_plain}</p>\n              <br />\n              <div>{fields}</div>\n              <br />\n              <p>{created}</p>\n            </div>\n          </div>\n        );\n      }\n    });\n\n    return (\n      <div>\n        <div>\n          <br />\n          <p>{this.state.projectName}</p>\n\n          {projectModules}\n\n          <div>\n            <div>\n              <div />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProjectPage;\n"]},"metadata":{},"sourceType":"module"}